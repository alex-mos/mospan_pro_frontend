worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # Пример с балансировкой нагрузки:
    # на каждый HTTP-запрос извне выбирается один из фронтендов или бекендов, и отправляется клиенту
    upstream frontend {
        # По очереди дёргаем то один фронтенд, то другой
        server localhost:8080;
        server localhost:8072;
        #server front1.example.com;
        #server front2.example.com;
    }

    upstream backend {
        # По очереди дёргаем то один бекенд, то другой
        # Балансировка нагрузки
        server localhost:8081;
        server localhost:8082;
        #server back1.example.com;
        #server back2.example.com;
    }

    # На mospan.pro — одно приложение с балансировкой нагрузки
    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        server_name mospan.pro;

        index index.html;

        # Всё, что /api, берём из апстрима с бекендом
        location /api {
            proxy_pass http://backend;
        }

        # Всё остальное берём из апстрима с фронтендом
        location / {
            proxy_pass http://frontend;
        }

        location ~* \.(?:ico|css|js|gif|jpe?g|png|svg)$ {
            # Some basic cache-control for static files to be sent to the browser
            expires max;
            add_header Pragma public;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        }
    }

    # Без балансировки, просто отдельные приложения
    ## Фронтенд 3
    server {
        listen 80;
        listen [::]:80;

        server_name app3.mospan.pro;

        index index.html;

        # Всё, что /api, берём из бекенда
        location /api {
            proxy_pass http://localhost:8081;
        }

        # Всё остальное берём из апстрима с фронтендом
        location / {
            proxy_pass http://localhost:8063;
        }

        location ~* \.(?:ico|css|js|gif|jpe?g|png|svg)$ {
            # Some basic cache-control for static files to be sent to the browser
            expires max;
            add_header Pragma public;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        }
    }

    ## Фронтенд 4
    server {
        listen 80;
        listen [::]:80;

        server_name app4.mospan.pro;

        index index.html;

        # Всё, что /api, берём из бекенда
        location /api {
            proxy_pass http://localhost:8081;
        }

        # Всё остальное берём из апстрима с фронтендом
        location / {
            proxy_pass http://localhost:8064;
        }

        location ~* \.(?:ico|css|js|gif|jpe?g|png|svg)$ {
            # Some basic cache-control for static files to be sent to the browser
            expires max;
            add_header Pragma public;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        }
    }

    include servers/*;
    include nginx-frontend.conf;
}
